#version 430
#define BUFFER_LENGTH			1024
#define FREQUENCY_BINS			1024

layout (local_size_x = 16) in;

layout(rg32f) uniform image2D pre_accumulate;		//2D vectors for each frequency and sample index
layout(rg32f) uniform image2D height_map;

void main() {
	int F = int(gl_GlobalInvocationID.x);


	vec2 result = vec2(0,0);

	for (int S=0; S<BUFFER_LENGTH; S++) {		
		result += imageLoad(pre_accumulate, ivec2(S, F)).rg;
	}


	ivec2 ip = ivec2(normalize(result) * float(F)) + ivec2(1024, 1024);
	float radius = length(result);
	float impulse = pow(radius, 2) *.01;

	float old = imageLoad(height_map, ip).g ;
	imageStore(height_map, ip, vec4(imageLoad(height_map, ip).r,  old + impulse / (1+abs(old)), 0, 0)) ;
	


}