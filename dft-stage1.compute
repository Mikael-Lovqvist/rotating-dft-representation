#version 430
#define BUFFER_LENGTH			1024
#define FREQUENCY_BINS			1024

layout (local_size_x = 16, local_size_y = 16) in;

layout(r32f) uniform image1D phase_offset;			//Current frequency offset
layout(r32f) uniform image1D phase_advance;			//Phase advancement per frequency
layout(r32f) uniform image1D audio_data;			//Audio buffer
layout(rg32f) uniform image2D pre_accumulate;		//2D vectors for each frequency and sample index

void main() {
	int S = int(gl_GlobalInvocationID.x);
	int F = int(gl_GlobalInvocationID.y);

	float angle = imageLoad(phase_offset, F).r + float(S) * imageLoad(phase_advance, F).r;
	float V = imageLoad(audio_data, S).r;

	imageStore(pre_accumulate, ivec2(S, F), vec4(cos(angle)*V, sin(angle)*V, 0, 0));
	
}